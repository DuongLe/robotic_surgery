#!/usr/bin/env python
#
# Software License Agreement (BSD License)
#
# Copyright (c) 2010, Arizona Robotics Research Group,
# University of Arizona. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of University of Arizona nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

import roslib
roslib.load_manifest('smart_arm_controller')

import rospy
from std_msgs.msg import Float64

joint_names = ('shoulder_pan_controller',
               'shoulder_pitch_controller',
               'elbow_flex_controller',
               'wrist_roll_controller',
               'claw_controller')

joint_commands = [
        (3.14, 1.9722, -0.5, 0.0, 0.0),
        (3.14, 1.9722, -0.51, 0.0, 0.0),
        (3.14, 1.9722, -0.52, 0.0, 0.0),
        (3.14, 1.9722, -0.53, 0.0, 0.0),
        (3.14, 1.9722, -0.54, 0.0, 0.0),
        (3.14, 1.9722, -0.55, 0.0, 0.0),
        (3.14, 1.9722, -0.56, 0.0, 0.0),      
        (3.14, 1.9722, -0.57, 0.0, 0.0),
        (3.14, 1.9722, -0.58, 0.0, 0.0),
        (3.14, 1.9722, -0.59, 0.0, 0.0),
        (3.14, 1.9722, -0.6, 0.0, 0.0),
        (3.14, 1.9722, -0.61, 0.0, 0.0),
        (3.14, 1.9722, -0.62, 0.0, 0.0),
        (3.14, 1.9722, -0.63, 0.0, 0.0),
        (3.14, 1.9722, -0.64, 0.0, 0.0),
        (3.14, 1.9722, -0.65, 0.0, 0.0),
        (3.14, 1.9722, -0.66, 0.0, 0.0),
        (3.14, 1.9722, -0.67, 0.0, 0.0),
        (3.14, 1.9722, -0.68, 0.0, 0.0),
        (3.14, 1.9722, -0.69, 0.0, 0.0),      
        (3.14, 1.9722, -0.7, 0.0, 0.0),
        (3.14, 1.9722, -0.71, 0.0, 0.0),
        (3.14, 1.9722, -0.72, 0.0, 0.0),
        (3.14, 1.9722, -0.73, 0.0, 0.0),
        (3.14, 1.9722, -0.74, 0.0, 0.0),
        (3.14, 1.9722, -0.75, 0.0, 0.0),
        (3.14, 1.9722, -0.76, 0.0, 0.0),
        (3.14, 1.9722, -0.77, 0.0, 0.0),
        (3.14, 1.9722, -0.78, 0.0, 0.0),
        (3.14, 1.9722, -0.79, 0.0, 0.0),
        (3.14, 1.9722, -0.8, 0.0, 0.0),
        (3.14, 1.9722, -0.81, 0.0, 0.0),
        (3.14, 1.9722, -0.82, 0.0, 0.0),      
        (3.14, 1.9722, -0.83, 0.0, 0.0),
        (3.14, 1.9722, -0.84, 0.0, 0.0),
        (3.14, 1.9722, -0.85, 0.0, 0.0),
        (3.14, 1.9722, -0.86, 0.0, 0.0),
        (3.14, 1.9722, -0.87, 0.0, 0.0),
        (3.14, 1.9722, -0.88, 0.0, 0.0),
        (3.14, 1.9722, -0.89, 0.0, 0.0),
        (3.14, 1.9722, -0.90, 0.0, 0.0),
        (3.14, 1.9722, -0.91, 0.0, 0.0),
        (3.14, 1.9722, -0.92, 0.0, 0.0),
        (3.14, 1.9722, -0.93, 0.0, 0.0),
        (3.14, 1.9722, -0.94, 0.0, 0.0),
        (3.14, 1.9722, -0.95, 0.0, 0.0),      
        (3.14, 1.9722, -0.96, 0.0, 0.0),
        (3.14, 1.9722, -0.97, 0.0, 0.0),
        (3.14, 1.9722, -0.98, 0.0, 0.0),
        (3.14, 1.9722, -0.99, 0.0, 0.0),
        (3.14, 1.9722, -1, 0.0, 0.0),
        (3.14, 1.9722, -1.01, 0.0, 0.0),
        (3.14, 1.9722, -1.02, 0.0, 0.0),
        (3.14, 1.9722, -1.03, 0.0, 0.0),
        (3.14, 1.9722, -1.04, 0.0, 0.0),
        (3.14, 1.9722, -1.05, 0.0, 0.0),
        (3.14, 1.9722, -1.06, 0.0, 0.0),
        (3.14, 1.9722, -1.07, 0.0, 0.0),
        (3.14, 1.9722, -1.08, 0.0, 0.0),      
        (3.14, 1.9722, -1.09, 0.0, 0.0),
        (3.14, 1.9722, -1.1, 0.0, 0.0),
        (3.14, 1.9722, -1.11, 0.0, 0.0),
        (3.14, 1.9722, -1.12, 0.0, 0.0),
        (3.14, 1.9722, -1.13, 0.0, 0.0),
        (3.14, 1.9722, -1.14, 0.0, 0.0),
        (3.14, 1.9722, -1.15, 0.0, 0.0),
        (3.14, 1.9722, -1.16, 0.0, 0.0),
        (3.14, 1.9722, -1.17, 0.0, 0.0),
        (3.14, 1.9722, -1.18, 0.0, 0.0),
        (3.14, 1.9722, -1.19, 0.0, 0.0),
        (3.14, 1.9722, -1.2, 0.0, 0.0),
        (3.14, 1.9722, -1.21, 0.0, 0.0),      
        (3.14, 1.9722, -1.22, 0.0, 0.0),
        (3.14, 1.9722, -1.23, 0.0, 0.0),
        (3.14, 1.9722, -1.24, 0.0, 0.0),
        (3.14, 1.9722, -1.25, 0.0, 0.0),
        (3.14, 1.9722, -1.26, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
        (3.14, 1.9722, -1.27, 0.0, 0.0),
]

if __name__ == '__main__':
    pubs = [rospy.Publisher(name + '/command', Float64) for name in joint_names]
    rospy.init_node('make_cobra_pose', anonymous=True)
    
    r = rospy.Rate(30)
    idx = 0
    while not rospy.is_shutdown():
        for i in range(len(pubs)):
            pubs[i].publish(joint_commands[idx][i])
        idx += 1
        if idx >= len(joint_commands):
            idx = 0

        r.sleep()
